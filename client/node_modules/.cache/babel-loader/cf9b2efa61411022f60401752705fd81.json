{"ast":null,"code":"var _jsxFileName = \"/Users/test/Desktop/projects/weatherview-react/client/src/components/Header/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect, useContext } from 'react';\nimport { WeatherContext } from '../../Contexts/WeatherContext';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { BiUserCircle } from 'react-icons/bi';\nimport sunny from '../../assets/images/sunny.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Header() {\n  _s();\n\n  const [[city, setCity], [data, setData], [error, setError], [isLoaded, setIsLoaded], [items, setItems]] = useContext(WeatherContext);\n  useEffect(() => {\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=c3db145bc89912e27b13b4d5a94e0f9d`).then(res => res.json()).then(result => {\n      if (result.cod === '200' || result.base === 'stations') {\n        setItems(result);\n      } else if (result.cod === '400' || result.cod === '404' || result === []) {\n        setIsLoaded(false);\n      }\n    }, error => {\n      setError(error);\n    });\n  }, [city]);\n  console.log(items);\n  return /*#__PURE__*/_jsxDEV(Navbar, {\n    className: \"header\",\n    fixed: \"top\",\n    variant: \"dark\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"row justify-content-start search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6\",\n        children: /*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          className: \"header-text\",\n          href: \"/\",\n          children: \"WeatherView\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          className: \"d-flex search-opt\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            onInput: event => {\n              setCity(event.target.value);\n            },\n            type: \"search\",\n            placeholder: \"Search\",\n            className: \"me-2\",\n            \"aria-label\": \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"search-btn\",\n            onClick: () => setIsLoaded(true),\n            variant: \"light\",\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-2\",\n        children: /*#__PURE__*/_jsxDEV(NavDropdown, {\n          className: \"user-dropdown\",\n          title: /*#__PURE__*/_jsxDEV(BiUserCircle, {\n            className: \"user-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 58\n          }, this),\n          id: \"navbarScrollingDropdown\",\n          children: [/*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n            href: \"/signin\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n            href: \"/signup\",\n            children: \"Create Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Header, \"yV5wLqS1DdUDkDBiOImYNIEEMWM=\");\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/test/Desktop/projects/weatherview-react/client/src/components/Header/index.js"],"names":["React","useState","useEffect","useContext","WeatherContext","Nav","Navbar","NavDropdown","Form","FormControl","Button","Container","BiUserCircle","sunny","Header","city","setCity","data","setData","error","setError","isLoaded","setIsLoaded","items","setItems","fetch","then","res","json","result","cod","base","console","log","event","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState, useEffect, useContext } from 'react';\nimport { WeatherContext } from '../../Contexts/WeatherContext';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { BiUserCircle } from 'react-icons/bi';\nimport sunny from '../../assets/images/sunny.jpg';\n\nfunction Header() {\n\n  const [[city, setCity], [data, setData],\n    [error, setError], [isLoaded, setIsLoaded],\n    [items, setItems]] = useContext(WeatherContext);\n\n\n  useEffect(() => {\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=c3db145bc89912e27b13b4d5a94e0f9d`)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          if (result.cod === '200' || result.base === 'stations') {\n            setItems(result);\n          }\n          else if (result.cod === '400' || result.cod === '404' || result === []) {\n            setIsLoaded(false);\n          }\n        },\n        (error) => {\n          setError(error);\n        }\n      )\n  }, [city]);\n\n\n  console.log(items);\n  return (\n    <Navbar className='header' fixed='top' variant=\"dark\">\n      <Container className='row justify-content-start search-container'>\n\n        <div className='col-6'>\n          <Navbar.Brand className='header-text' href=\"/\">WeatherView</Navbar.Brand>\n        </div>\n\n        <div className='col-4'>\n          <Form className=\"d-flex search-opt\">\n            <FormControl\n              onInput={(event) => { setCity(event.target.value) }}\n              type=\"search\"\n              placeholder=\"Search\"\n              className=\"me-2\"\n              aria-label=\"Search\" />\n            <Button\n              className='search-btn'\n              onClick={() => setIsLoaded(true)}\n              variant=\"light\">Search</Button>\n          </Form>\n        </div>\n        <div className='col-2'>\n          <NavDropdown className='user-dropdown' title= {<BiUserCircle className='user-icon' />} id=\"navbarScrollingDropdown\">\n            <NavDropdown.Item href=\"/signin\">Sign In</NavDropdown.Item>\n            <NavDropdown.Divider />\n            <NavDropdown.Item href=\"/signup\">Create Account</NavDropdown.Item>\n          </NavDropdown>\n        </div>\n      </Container>\n    </Navbar>\n  )\n}\n\nexport default Header;"]},"metadata":{},"sourceType":"module"}